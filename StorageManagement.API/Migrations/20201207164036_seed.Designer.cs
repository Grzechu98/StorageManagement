// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageManagement.API.Data;

namespace StorageManagement.API.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20201207164036_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StorageManagement.API.Models.ContractorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("StorageManagement.API.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StorageManagement.API.Models.ShelfModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RackId")
                        .HasColumnType("int");

                    b.Property<string>("ShelfNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.HasIndex("RackId");

                    b.ToTable("Shelves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quantity = 0,
                            RackId = 1,
                            ShelfNumber = "1"
                        },
                        new
                        {
                            Id = 2,
                            Quantity = 0,
                            RackId = 1,
                            ShelfNumber = "2"
                        },
                        new
                        {
                            Id = 3,
                            Quantity = 0,
                            RackId = 1,
                            ShelfNumber = "3"
                        },
                        new
                        {
                            Id = 4,
                            Quantity = 0,
                            RackId = 1,
                            ShelfNumber = "4"
                        },
                        new
                        {
                            Id = 5,
                            Quantity = 0,
                            RackId = 2,
                            ShelfNumber = "1"
                        },
                        new
                        {
                            Id = 6,
                            Quantity = 0,
                            RackId = 2,
                            ShelfNumber = "2"
                        },
                        new
                        {
                            Id = 7,
                            Quantity = 0,
                            RackId = 2,
                            ShelfNumber = "3"
                        },
                        new
                        {
                            Id = 8,
                            Quantity = 0,
                            RackId = 2,
                            ShelfNumber = "4"
                        },
                        new
                        {
                            Id = 9,
                            Quantity = 0,
                            RackId = 3,
                            ShelfNumber = "1"
                        },
                        new
                        {
                            Id = 10,
                            Quantity = 0,
                            RackId = 3,
                            ShelfNumber = "2"
                        },
                        new
                        {
                            Id = 11,
                            Quantity = 0,
                            RackId = 3,
                            ShelfNumber = "3"
                        },
                        new
                        {
                            Id = 12,
                            Quantity = 0,
                            RackId = 3,
                            ShelfNumber = "4"
                        },
                        new
                        {
                            Id = 13,
                            Quantity = 0,
                            RackId = 4,
                            ShelfNumber = "1"
                        },
                        new
                        {
                            Id = 14,
                            Quantity = 0,
                            RackId = 4,
                            ShelfNumber = "2"
                        },
                        new
                        {
                            Id = 15,
                            Quantity = 0,
                            RackId = 4,
                            ShelfNumber = "3"
                        },
                        new
                        {
                            Id = 16,
                            Quantity = 0,
                            RackId = 4,
                            ShelfNumber = "4"
                        },
                        new
                        {
                            Id = 17,
                            Quantity = 0,
                            RackId = 5,
                            ShelfNumber = "1"
                        },
                        new
                        {
                            Id = 18,
                            Quantity = 0,
                            RackId = 5,
                            ShelfNumber = "2"
                        },
                        new
                        {
                            Id = 19,
                            Quantity = 0,
                            RackId = 5,
                            ShelfNumber = "3"
                        },
                        new
                        {
                            Id = 20,
                            Quantity = 0,
                            RackId = 5,
                            ShelfNumber = "4"
                        });
                });

            modelBuilder.Entity("StorageManagement.API.Models.StorageRackModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ContractorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("bit");

                    b.Property<string>("RackNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StorageRacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsTaken = false,
                            RackNumber = "A1",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsTaken = false,
                            RackNumber = "A2",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsTaken = false,
                            RackNumber = "B1",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsTaken = false,
                            RackNumber = "B2",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 5,
                            IsTaken = false,
                            RackNumber = "C1",
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("StorageManagement.API.Models.WarehouseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Rzeszów",
                            Name = "Magazyn 1",
                            PostCode = "35-311",
                            Street = "Eugeniusza Kwiatkowskiego",
                            UnitNumber = "45"
                        });
                });

            modelBuilder.Entity("StorageManagement.API.Models.ShelfModel", b =>
                {
                    b.HasOne("StorageManagement.API.Models.ProductModel", "Product")
                        .WithOne("Shelf")
                        .HasForeignKey("StorageManagement.API.Models.ShelfModel", "ProductId");

                    b.HasOne("StorageManagement.API.Models.StorageRackModel", "Rack")
                        .WithMany("Shelves")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Rack");
                });

            modelBuilder.Entity("StorageManagement.API.Models.StorageRackModel", b =>
                {
                    b.HasOne("StorageManagement.API.Models.ContractorModel", "Contractor")
                        .WithMany("Racks")
                        .HasForeignKey("ContractorId");

                    b.HasOne("StorageManagement.API.Models.WarehouseModel", "Warehouse")
                        .WithMany("StorageRacks")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StorageManagement.API.Models.ContractorModel", b =>
                {
                    b.Navigation("Racks");
                });

            modelBuilder.Entity("StorageManagement.API.Models.ProductModel", b =>
                {
                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("StorageManagement.API.Models.StorageRackModel", b =>
                {
                    b.Navigation("Shelves");
                });

            modelBuilder.Entity("StorageManagement.API.Models.WarehouseModel", b =>
                {
                    b.Navigation("StorageRacks");
                });
#pragma warning restore 612, 618
        }
    }
}
